<?xml version="1.0" encoding="UTF-8"?>
<exportedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="commander.xsd" version="61" buildLabel="build_main_56612_2012.12.14_04:41:42" buildVersion="4.2.0.56612" passkey="c380daa28ce3bf26495610a3c73ce8190934c83a">
  <exportPath>/projects/Chef</exportPath>
  <project>
    <projectName>Chef</projectName>
    <description>This project includes procedures that illustrate how Electric Commander, Opscode Chef and EC2 can work together.&#10;&#10;To use this project, you'll need the following:&#10;- Chef Server&#10;- Chef Workstation&#10;-- Configured to work with the Chef Server&#10;-- EC2 plugin installed&#10;-- Commander agent installed, resource name "Chef Workstation"&#10;-- knife.rb in ~/chef-repo/.chef (with AWS Access Key Id and Secret Access Key)&#10;-- Electric Commander installer in home directory&#10;</description>
    <resourceName></resourceName>
    <workspaceName></workspaceName>
    <propertySheet>
      <property>
        <propertyName>rolesList</propertyName>
        <propertySheet>
          <property>
            <propertyName>option1</propertyName>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <expandable>1</expandable>
                <value>base</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <expandable>1</expandable>
                <value>base</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>option2</propertyName>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <expandable>1</expandable>
                <value>dbapp</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <expandable>1</expandable>
                <value>dbapp</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>option3</propertyName>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <expandable>1</expandable>
                <value>dbapp_database_master</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <expandable>1</expandable>
                <value>dbapp_database_master</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>option4</propertyName>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <expandable>1</expandable>
                <value>dbapp_load_balancer</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <expandable>1</expandable>
                <value>dbapp_load_balancer</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>optionCount</propertyName>
            <expandable>1</expandable>
            <value>4</value>
          </property>
        </propertySheet>
      </property>
      <property>
        <propertyName>colonEqualValuePairs</propertyName>
        <description>Postp to automatically create properties from step output; colon and equal-sign name-value pairs mapped to properties/values.</description>
        <expandable>1</expandable>
        <value>@::gMatchers = (&#10;    {&#10;    id =&gt; q{colonEqualValuePairs},&#10;    pattern =&gt; q{([^:=]+)\s*[:=]+\s*([^:=]+)},&#10;    action =&gt; q{setProperty("$[propertyRoot]$1","$2")},&#10;    },&#10;);</value>
      </property>
      <property>
        <propertyName>ec_tags</propertyName>
        <expandable>1</expandable>
        <value>  </value>
      </property>
      <property>
        <propertyName>version</propertyName>
        <description></description>
        <expandable>1</expandable>
        <value>1.2.0</value>
      </property>
    </propertySheet>
    <procedure>
      <procedureName>1. Create EC2 EC Agent and Chef Node</procedureName>
      <description>RUN ME - Top level Procedure&#10;&#10;Starts Ubuntu VM&#10;Makes it a Chef client&#10;Installs EC agent (Assumes installer is in ubuntu home directory)&#10;Adds resource to EC</description>
      <jobNameTemplate>Create_EC_Chef_VM_$[targetName]_$[/myJob/jobId]</jobNameTemplate>
      <resourceName></resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>commanderInstaller</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>pool</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>targetName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>commanderInstaller</formalParameterName>
        <defaultValue>ElectricCommander-4.2.0.56612</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>pool</formalParameterName>
        <defaultValue>dynamicDemoPool</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>targetName</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>Start EC2 VM</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <subprocedure>Launch EC2 VM</subprocedure>
        <subproject>Chef</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>propertyRoot</propertyName>
            <expandable>1</expandable>
            <value>/myJob/VMDetails/</value>
          </property>
          <property>
            <propertyName>targetName</propertyName>
            <expandable>1</expandable>
            <value>$[targetName]</value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Install EC Agent</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <subprocedure>Install EC Agent</subprocedure>
        <subproject>Chef</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>commanderInstaller</propertyName>
            <expandable>1</expandable>
            <value>$[commanderInstaller]</value>
          </property>
          <property>
            <propertyName>hostName</propertyName>
            <expandable>1</expandable>
            <value>$[/myJob/VMDetails/Private DNS Name]</value>
          </property>
          <property>
            <propertyName>targetName</propertyName>
            <expandable>1</expandable>
            <value>$[targetName]</value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>apt-get update</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>apt-get update</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>$[targetName]</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>chef-client</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>chef-client</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>$[targetName]</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>add to EC pool</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ectool addResourcesToPool $[pool] --resourceNames $[targetName]&#10;</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>local</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>2. Update Role List</procedureName>
      <description>Query tempChef for the list of defined Roles, then update a property structure that is used as the basis for a dropdown list that the user can select from.&#10;Run this procedure before running the apply role procedure.</description>
      <jobNameTemplate>$[/myProject/projectName]::$[/myProcedure/procedureName]::$[/myJob/jobId]</jobNameTemplate>
      <resourceName>Chef Workstation</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>minutes</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>ProjectToUpdate</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>PropertyPathToUpdate</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>PropertyPathToUpdate</formalParameterName>
        <defaultValue>/myProject/rolesList</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>Get Roles from tempChef</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>use strict;&#10;use ElectricCommander;&#10;$| = 1;&#10;my $ec = new ElectricCommander;&#10;&#10;# Get the property path to write the role selection to&#10;my $propPath = "$[PropertyPathToUpdate]";&#10;&#10;my $rolesList = `knife role list -c ~/chef-repo/.chef/knife.rb`;&#10;&#10;my @roles = split /\n/, $rolesList;&#10;# Get the count of the number of roles&#10;my $numRoles = @roles;&#10;&#10;&#10;print "The list of roles is: @roles\n";&#10;print "There are $numRoles roles\n";&#10;&#10;# Write out the optionCount property&#10;$ec-&gt;setProperty("$propPath" . "/optionCount", $numRoles);&#10;&#10;my $optionCount = 1;&#10;foreach my $role (@roles){&#10;  $role =~ s/^\s+//;&#10;  # Write out the /text and /value properties under each option&#10;  $ec-&gt;setProperty("$propPath" . "/option" . "$optionCount" . "/text", "$role");&#10;  $ec-&gt;setProperty("$propPath" . "/option" . "$optionCount" . "/value", "$role");&#10;  $optionCount++;&#10;}&#10;</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>3. Push role to node</procedureName>
      <description>Example of assigning a node a particular role.  Role is pull-down parameter that is populated by the "Update Role List"; run that procedure before this one.</description>
      <jobNameTemplate>Push_role_$[role]_to_node_$[/myJob/jobId]</jobNameTemplate>
      <resourceName>Chef Workstation</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>node</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>role</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>propertyPath</propertyName>
                          <expandable>1</expandable>
                          <value>$[/myProject/rolesList]</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>entry</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>node</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>role</formalParameterName>
        <defaultValue></defaultValue>
        <description>Chef role to push out to node.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <step>
        <stepName>command line knife</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>cd ~/chef-repo/.chef&#10;knife node list</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Push base role to node</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <subprocedure>AddRecipesToNodeRunList</subprocedure>
        <subproject>/plugins/EC-Chef/project</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>after_item</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>chef_server_url</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>configuration_file</propertyName>
            <expandable>1</expandable>
            <value>~/chef-repo/.chef/knife.rb</value>
          </property>
          <property>
            <propertyName>knife_path</propertyName>
            <expandable>1</expandable>
            <value>/usr/bin/knife</value>
          </property>
          <property>
            <propertyName>node_name</propertyName>
            <expandable>1</expandable>
            <value>$[node]</value>
          </property>
          <property>
            <propertyName>run_list_items</propertyName>
            <expandable>1</expandable>
            <value>role[$[role]]</value>
          </property>
          <property>
            <propertyName>verbose</propertyName>
            <expandable>1</expandable>
            <value>0</value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Run Chef Client on Node</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>$[node]</resourceName>
        <subprocedure>RunChefClient</subprocedure>
        <subproject>/plugins/EC-Chef/project</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>additional_commands</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>chef_client_path</propertyName>
            <expandable>1</expandable>
            <value>/usr/bin/chef-client</value>
          </property>
          <property>
            <propertyName>chef_server_url</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>configuration_file</propertyName>
            <expandable>1</expandable>
            <value>/etc/chef/client.rb</value>
          </property>
          <property>
            <propertyName>daemonize</propertyName>
            <expandable>1</expandable>
            <value>0</value>
          </property>
          <property>
            <propertyName>interval</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>json_attributes_definition</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>log_level</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>node_name</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>replace_current_run_list</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>3. Push role to node copy</procedureName>
      <description>Example of assigning a node a particular role.  Role is a parameter, default value "base".  See Chef Server &gt; Roles for other available values.</description>
      <jobNameTemplate>Push_role_$[role]_to_node_$[/myJob/jobId]</jobNameTemplate>
      <resourceName>Chef Workstation</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>node</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>role</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>propertyPath</propertyName>
                          <expandable>1</expandable>
                          <value>$[/myProject/rolesList]</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>entry</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>node</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>role</formalParameterName>
        <defaultValue></defaultValue>
        <description>Chef role to push out to node.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <step>
        <stepName>command line knife</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>cd ~/chef-repo/.chef&#10;knife node list</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Push Role</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife node run_list add $[node] role[$[/javascript myJob.role.trim()]] --config ~/chef-repo/.chef/knife.rb</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Run Chef Client on Node</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>$[node]</resourceName>
        <subprocedure>RunChefClient</subprocedure>
        <subproject>/plugins/EC-Chef/project</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>additional_commands</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>chef_client_path</propertyName>
            <expandable>1</expandable>
            <value>/usr/bin/chef-client</value>
          </property>
          <property>
            <propertyName>chef_server_url</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>configuration_file</propertyName>
            <expandable>1</expandable>
            <value>/etc/chef/client.rb</value>
          </property>
          <property>
            <propertyName>daemonize</propertyName>
            <expandable>1</expandable>
            <value>0</value>
          </property>
          <property>
            <propertyName>interval</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>json_attributes_definition</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>log_level</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>node_name</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>replace_current_run_list</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>4. Push recipe to node</procedureName>
      <description>Example of pushing a recipe out to a node.  Recipe is a parameter, default value "git".  See Chef Server &gt; Cookbooks for other available values.</description>
      <jobNameTemplate>Push_recipe_$[recipe]_to_node_$[/myJob/jobId]</jobNameTemplate>
      <resourceName>Chef Workstation</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>node</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>recipe</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>role</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>node</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>recipe</formalParameterName>
        <defaultValue>git</defaultValue>
        <description>Chef role to push out to node.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>command line knife</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>cd ~/chef-repo/.chef&#10;knife node list</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Assign recipe to node</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <subprocedure>AddRecipesToNodeRunList</subprocedure>
        <subproject>/plugins/EC-Chef/project</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>after_item</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>chef_server_url</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>configuration_file</propertyName>
            <expandable>1</expandable>
            <value>~/chef-repo/.chef/knife.rb</value>
          </property>
          <property>
            <propertyName>knife_path</propertyName>
            <expandable>1</expandable>
            <value>/usr/bin/knife</value>
          </property>
          <property>
            <propertyName>node_name</propertyName>
            <expandable>1</expandable>
            <value>$[node]</value>
          </property>
          <property>
            <propertyName>run_list_items</propertyName>
            <expandable>1</expandable>
            <value>recipe[$[recipe]]</value>
          </property>
          <property>
            <propertyName>verbose</propertyName>
            <expandable>1</expandable>
            <value>0</value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Run Chef Client on Node</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>$[node]</resourceName>
        <subprocedure>RunChefClient</subprocedure>
        <subproject>/plugins/EC-Chef/project</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>additional_commands</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>chef_client_path</propertyName>
            <expandable>1</expandable>
            <value>/usr/bin/chef-client</value>
          </property>
          <property>
            <propertyName>chef_server_url</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>configuration_file</propertyName>
            <expandable>1</expandable>
            <value>/etc/chef/client.rb</value>
          </property>
          <property>
            <propertyName>daemonize</propertyName>
            <expandable>1</expandable>
            <value>0</value>
          </property>
          <property>
            <propertyName>interval</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>json_attributes_definition</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>log_level</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>node_name</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>replace_current_run_list</propertyName>
            <expandable>1</expandable>
            <value></value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>5. Query Server about a node</procedureName>
      <description>Example Chef Workstation Commands&#10;- List nodes&#10;- Get attributes from a node</description>
      <jobNameTemplate>Query_attribute_$[attribute]_from_node_$[node]_$[/myJob/jobId]</jobNameTemplate>
      <resourceName>Chef Workstation</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>minutes</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>attribute</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>node</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>attribute</formalParameterName>
        <defaultValue>memory.active</defaultValue>
        <description>Chef node attribute.  See Chef Server &gt; Nodes &gt; &lt;chose a node&gt; &gt; Attributes for a list.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>node</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>List managed nodes</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife node list -c ~/chef-repo/.chef/knife.rb</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Query Node Attributes</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife node show $[node] -a uptime -a $[attribute] -c ~/chef-repo/.chef/knife.rb</command>
        <condition></condition>
        <description>-a node  # to list all attributes</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>6. Delete VM</procedureName>
      <description>RUN ME - Top level Procedure&#10;&#10;Delete VM&#10;Remove Node from Chef Server&#10;Remove Client from Chef Server&#10;Delete EC Resource</description>
      <jobNameTemplate>Delete_EC_Chef_VM_$[nodeName]_$[/myJob/jobId]</jobNameTemplate>
      <resourceName>Chef Workstation</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>nodeId</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>nodeName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>nodeName</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>Get nodeId</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <parallel>0</parallel>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <subprocedure>Get node ID from node name</subprocedure>
        <subproject>Chef</subproject>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workspaceName></workspaceName>
        <actualParameters>
          <property>
            <propertyName>nodeName</propertyName>
            <expandable>1</expandable>
            <value>$[/myJob/nodeName]</value>
          </property>
        </actualParameters>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Delete VM</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife ec2 server delete $[/myJob/nodeId] -c ~/chef-repo/.chef/knife.rb -yes</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Remove Node from Chef Server</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife node delete $[nodeName] -c ~/chef-repo/.chef/knife.rb -yes</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Remove Client from Chef Server</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife client delete $[nodeName] -c ~/chef-repo/.chef/knife.rb -yes</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Delete EC Resource</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ectool deleteResource $[nodeName]</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>local</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>Add Deploy Agent</procedureName>
      <description>Create resource&#10;Add PLATFORM parameter</description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName>local</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>minutes</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>hostname</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>target</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>targetName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>hostname</formalParameterName>
        <defaultValue></defaultValue>
        <description>DNS name or IP address of target machine</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>targetName</formalParameterName>
        <defaultValue></defaultValue>
        <description>Name of new Deploy Agent</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>Create Resource</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ectool createResource $[targetName] --hostName $[hostname] --zoneName default</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Set PLATFORM</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ectool setProperty /resources/$[targetName]/PLATFORM UNX</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>Get node ID from node name</procedureName>
      <description>Parse 'knife ec2 server list' command to return node ID from supplied node name</description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName>Chef Workstation</resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>nodeName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
        <property>
          <propertyName>nodeId</propertyName>
          <description>postp processor to grab ID from 'knife ec2 server list' command</description>
          <expandable>1</expandable>
          <value>my @nodeId = (&#10;	{&#10;	id      =&gt; q{nodeId},&#10;	pattern =&gt; q{^(\S+)\s+$[nodeName]},&#10;	action  =&gt; q{setProperty("/myJob/nodeId","$1")},&#10;	},&#10;);&#10;push @::gMatchers, @nodeId;</value>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>nodeName</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>Get node id</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife ec2 server list -c ~/chef-repo/.chef/knife.rb</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor>postp --loadProperty /myProcedure/nodeId</postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>Increment Version and Post to Github</procedureName>
      <description>Run this procedure to post your changes and additions to Git hub.  You'll need write permissions to electriccommunity/electriccommander.&#10;Currently, this procedure only works Unix like OSes and needs to be run on the Commander Server agent ("local" resource).&#10;&#10;Requires&#10;- Java JDK&#10;- git</description>
      <jobNameTemplate>Package_and_post_project_to_Github_$[/myJob/jobId]</jobNameTemplate>
      <resourceName></resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>README</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>commitComment</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>gitPass</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>gitUser</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>password</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>revType</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Patch</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>3</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Minor</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>2</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Major</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>1</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option4</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Major</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>3</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>3</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>userName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
        <property>
          <propertyName>plugin.xml</propertyName>
          <description>Template file, updated with version number.</description>
          <expandable>1</expandable>
          <value>&lt;?xml version="1.0"?&gt;&#10;&#10;&lt;plugin&gt;&#10;	&lt;key&gt;ChefCommander&lt;/key&gt;&#10;	&lt;version&gt;$[/myProject/version]&lt;/version&gt;&#10;	&lt;label&gt;Chef Commander EC2 Examples&lt;/label&gt;&#10;	&lt;description&gt;A Project Illustrating the use of Opcode Chef and Commander together&lt;/description&gt;&#10;	&lt;vendor&gt;Electric Cloud&lt;/vendor&gt;&#10;	&lt;author&gt;Electric Cloud&lt;/author&gt;&#10;&lt;/plugin&gt;</value>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>commitComment</formalParameterName>
        <defaultValue></defaultValue>
        <description>Git commit comment</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>gitPass</formalParameterName>
        <defaultValue></defaultValue>
        <description>Github electriccommunity / electriccommander password</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>gitUser</formalParameterName>
        <defaultValue></defaultValue>
        <description>Github electriccommunity / electriccommander user name</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>README</formalParameterName>
        <defaultValue>This project includes procedures that illustrate how Electric Commander, Opscode Chef and EC2 can work together.&#10;&#10;To use this project, you'll need the following:&#10;- Chef Server&#10;- Chef Workstation&#10;-- Configured to work with the Chef Server&#10;-- EC2 plugin installed&#10;-- Commander agent installed, resource name "Chef Workstation"&#10;-- knife.rb in ~/chef-repo/.chef (with AWS Access Key Id and Secret Access Key)&#10;-- Electric Commander installer in home directory&#10;</defaultValue>
        <description>The README file that appears in Github</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>textarea</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>revType</formalParameterName>
        <defaultValue></defaultValue>
        <description>Revision type, where version is of the form major.minor.path.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>radio</type>
      </formalParameter>
      <step>
        <stepName>Increment Version</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>echo Current Version: $[/myProject/version]&#10;ectool setProperty /myProject/version $[/javascript&#10;var version=myProject.version.split(/\./);&#10;var major=version[0];&#10;var minor=version[1];&#10;var patch=version[2];&#10;if(myJob.revType==1) {&#10;	// Major Rev&#10;	minor=0;&#10;	patch=0;&#10;	major++;&#10;}&#10;if(myJob.revType==2) {&#10;	// Minor Rev&#10;	patch=0;&#10;	minor++;&#10;}&#10;if(myJob.revType==3) {&#10;	// Patch Rev&#10;	patch++;&#10;}&#10;major + "." + minor + "." + patch;&#10;]</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
      <step>
        <stepName>Get latest from Github</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>git clone https://github.com/electriccommunity/electriccommander</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
      <step>
        <stepName>Export Project</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>if [ ! -e "$PWD/electriccommander/Chef" ]&#10;then&#10;mkdir "$PWD/electriccommander/Chef"&#10;mkdir "$PWD/electriccommander/Chef/META-INF"&#10;fi&#10;ectool export "$PWD/electriccommander/Chef/META-INF/project.xml" --path /projects/"$[/myProject/projectName]" --relocatable 1 --excludeJobs true</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
      <step>
        <stepName>Update plugin.xml</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>open(FILE, "&gt;$ENV{PWD}/electriccommander/Chef/META-INF/plugin.xml") or die "Cannot open $ENV{PWD}/electriccommander/Chef/META-INF/plugin.xml";&#10;print FILE &lt;&lt;EOF;&#10;$[/myProcedure/plugin.xml]&#10;EOF&#10;close(FILE);</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
      <step>
        <stepName>Update README</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>open(FILE, "&gt;$ENV{PWD}/electriccommander/Chef/README") or die "Cannot open $ENV{PWD}/electriccommander/Chef/README";&#10;print FILE &lt;&lt;EOF;&#10;$[README]&#10;EOF&#10;close(FILE);</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
      <step>
        <stepName>Package Plugin</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>cd electriccommander&#10;if [ -e Chef/*.jar ];then git rm Chef/*.jar;fi&#10;cd Chef&#10;jar cvf Chef_v$[/javascript myProject.version.replace(/\./g,"_")].jar .</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
      <step>
        <stepName>Post to Github</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>cd electriccommander&#10;git add Chef&#10;git commit -m "$[commitComment]"&#10;git remote rm origin&#10;git remote add origin https://$[gitUser]:$[gitPass]@github.com/electriccommunity/electriccommander&#10;git push origin master</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>Install EC Agent</procedureName>
      <description>Installs EC agent (Assumes installer is in Chef Workstation ubuntu home directory)&#10;Adds resource to EC</description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName></resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>seconds</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>commanderInstaller</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>hostName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>targetName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>commanderInstaller</formalParameterName>
        <defaultValue>ElectricCommander-4.2.0.56612</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>hostName</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>targetName</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>Copy EC Installer</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/chefKey.pem ~ubuntu/$[commanderInstaller] ubuntu@$[/myJob/VMDetails/Private DNS Name]:</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>chmod EC installer</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -i ~/.ssh/chefKey.pem ubuntu@$[/myJob/VMDetails/Private DNS Name] "chmod +x $[commanderInstaller]"</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Install EC</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/chefKey.pem ubuntu@$[/myJob/VMDetails/Private DNS Name] "sudo ./$[commanderInstaller] --mode silent --installAgent --unixAgentUser ubuntu --unixAgentGroup ubuntu"</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Change agent user to root</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/chefKey.pem ubuntu@$[/myJob/VMDetails/Private DNS Name] "sudo sed s/RUN_AS_USER=ubuntu/RUN_AS_USER=root/ /etc/init.d/commanderAgent &gt; /tmp/commanderAgent"&#10;ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/chefKey.pem ubuntu@$[/myJob/VMDetails/Private DNS Name] "sudo rm -f /etc/init.d/commanderAgent"&#10;ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/chefKey.pem ubuntu@$[/myJob/VMDetails/Private DNS Name] "sudo cp /tmp/commanderAgent /etc/init.d/commanderAgent"&#10;ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/chefKey.pem ubuntu@$[/myJob/VMDetails/Private DNS Name] "sudo chmod +x /etc/init.d/commanderAgent"</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Restart Agent</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/chefKey.pem ubuntu@$[/myJob/VMDetails/Private DNS Name] "sudo /etc/init.d/commanderAgent restart"</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Add resource</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>ectool createResource $[targetName] --hostName $[/myJob/VMDetails/Private DNS Name]&#10;ectool setProperty /resources/$[targetName]/PLATFORM UNX</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>local</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Set Java Version to EC's</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>update-alternatives --install "/usr/bin/java" "java" "/opt/electriccloud/electriccommander/jre/bin/java" 1&#10;update-alternatives --config java&#10;</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>$[targetName]</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>Launch EC2 VM</procedureName>
      <description>Starts Ubuntu VM&#10;See /myJob/VMDetails/ for hostname and other VM data</description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName></resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>propertyRoot</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>targetName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>propertyRoot</formalParameterName>
        <defaultValue>/myJob/VMDetails/</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>targetName</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>Start VM</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>knife ec2 server create -I ami-7000f019 -x ubuntu -i ~/.ssh/chefKey.pem -S chefKey -f m1.small -N $[targetName] -c ~/chef-repo/.chef/knife.rb -g chef</command>
        <condition></condition>
        <description></description>
        <errorHandling>abortJobNow</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor>postp --loadProperty /myProject/colonEqualValuePairs </postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>Chef Workstation</resourceName>
        <shell></shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
  </project>
</exportedData>
