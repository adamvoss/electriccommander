<?xml version="1.0" encoding="UTF-8"?>
<exportedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="commander.xsd" version="61" buildLabel="build_main_58126_2013.03.19_12:45:34" buildVersion="4.2.1.58126" passkey="b16e7e4ec237d4e13f4253a031c37b7da3af29c1">
  <exportPath>/projects/AbortWorkflow</exportPath>
  <project>
    <projectName>AbortWorkflow</projectName>
    <description>Complete a workflow and all of its subworkflows, and abort all subjobs in the hierarchy.</description>
    <resourceName></resourceName>
    <workspaceName></workspaceName>
    <propertySheet>
      <property>
        <propertyName>ec_tags</propertyName>
        <expandable>1</expandable>
        <value>  </value>
      </property>
    </propertySheet>
    <procedure>
      <procedureName>AbortWorkflow</procedureName>
      <description></description>
      <jobNameTemplate>abort-workflow-$[jobId]</jobNameTemplate>
      <resourceName></resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>minutes</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
      </propertySheet>
      <formalParameter>
        <formalParameterName>projectToAbort</formalParameterName>
        <defaultValue></defaultValue>
        <description>The name of the project containing the workflow to abort.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>workflowToAbort</formalParameterName>
        <defaultValue></defaultValue>
        <description>The name of the workflow to abort.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>AbortWorkflow</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>use strict;&#10;use warnings;&#10;use ElectricCommander;&#10;&#10;my $ec = new ElectricCommander({debug =&gt; 1});&#10;&#10;sub getParameterValue($);&#10;sub abortWorkflow($$);&#10;&#10;abortWorkflow(&#10;    getParameterValue('projectToAbort'),&#10;    getParameterValue('workflowToAbort'));&#10;&#10;# Helper method to extract the value of a parameter.&#10;&#10;sub getParameterValue($)&#10;{&#10;    my ($name) = @_;&#10;    return $ec-&gt;getProperty("/myParent/$name")-&gt;findvalue("//value")-&gt;string_value;&#10;}&#10;&#10;# Main helper method to abort a workflow.  Called recursively on subworkflows.&#10;&#10;sub abortWorkflow($$)&#10;{&#10;    my ($project, $workflow) = @_;&#10;&#10;    my $result = $ec-&gt;getStates($project, $workflow);&#10;    foreach my $state($result-&gt;findnodes("/responses/response/state")) {&#10;        my $subworkflow = $state-&gt;findvalue("subworkflow")-&gt;string_value;&#10;        my $subjob = $state-&gt;findvalue("subjob")-&gt;string_value;&#10;		if ($subworkflow ne "") {&#10;			# Account for different formats for the &lt;subworkflow&gt; element.  In&#10;			# either case, call abortWorkflow recursively on the subworkflow.&#10;			if ($subworkflow =~ m#/projects/(.*)/workflows/(.*)#) {&#10;				abortWorkflow($1, $2);&#10;			} else {&#10;				abortWorkflow($project, $subworkflow);&#10;			}&#10;		} elsif ($subjob ne "") {&#10;			$ec-&gt;abortJob($subjob);&#10;		}&#10;    }&#10;    $ec-&gt;completeWorkflow($project, $workflow);&#10;}&#10;</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
  </project>
</exportedData>
