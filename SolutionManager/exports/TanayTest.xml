<?xml version="1.0" encoding="UTF-8"?>
<exportedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="commander.xsd" version="61" buildLabel="build_main_58126_2013.03.19_12:45:34" buildVersion="4.2.1.58126" passkey="b16e7e4ec237d4e13f4253a031c37b7da3af29c1">
  <exportPath>/projects/GetWorkflowDetails</exportPath>
  <project>
    <projectName>GetWorkflowDetails</projectName>
    <description>Test Change</description>
    <resourceName></resourceName>
    <workspaceName></workspaceName>
    <propertySheet>
      <property>
        <propertyName>ec_tags</propertyName>
        <expandable>1</expandable>
        <value>  </value>
      </property>
    </propertySheet>
    <procedure>
      <procedureName>GetWorkflowDetails</procedureName>
      <description></description>
      <jobNameTemplate>GetWorkflowDetails-375</jobNameTemplate>
      <resourceName></resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>minutes</timeLimitUnits>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>interval</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>monitor</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>pretty</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>checkedValue</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                    <property>
                      <propertyName>initiallyChecked</propertyName>
                      <expandable>1</expandable>
                      <value>1</value>
                    </property>
                    <property>
                      <propertyName>uncheckedValue</propertyName>
                      <expandable>1</expandable>
                      <value>0</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>projectToGet</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>property</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>propertyForDetails</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>propertyForOutcome</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>workflowToGet</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
        <property>
          <propertyName>ec_parameterForm</propertyName>
          <description></description>
          <expandable>1</expandable>
          <value>&lt;editor&gt;&#10;    &lt;formElement&gt;&#10;        &lt;label&gt;Project Name:&lt;/label&gt;&#10;        &lt;property&gt;projectToGet&lt;/property&gt;&#10;        &lt;documentation&gt;The name of the workflow's project.&lt;/documentation&gt;&#10;        &lt;type&gt;entry&lt;/type&gt;&#10;    &lt;/formElement&gt;&#10;    &lt;formElement&gt;&#10;        &lt;label&gt;Workflow Name:&lt;/label&gt;&#10;        &lt;property&gt;workflowToGet&lt;/property&gt;&#10;        &lt;documentation&gt;The name of the workflow.&lt;/documentation&gt;&#10;        &lt;type&gt;entry&lt;/type&gt;&#10;    &lt;/formElement&gt;&#10;    &lt;formElement&gt;&#10;        &lt;label&gt;Property for Details:&lt;/label&gt;&#10;        &lt;property&gt;propertyForDetails&lt;/property&gt;&#10;        &lt;documentation&gt;The property in which to store the workflow details.&lt;/documentation&gt;&#10;        &lt;type&gt;entry&lt;/type&gt;&#10;    &lt;/formElement&gt;&#10;    &lt;formElement&gt;&#10;        &lt;label&gt;Property for Outcome:&lt;/label&gt;&#10;        &lt;property&gt;propertyForOutcome&lt;/property&gt;&#10;        &lt;documentation&gt;The property in which to store the workflow outcome (calculated from the outcomes of all subprocesses).&lt;/documentation&gt;&#10;        &lt;type&gt;entry&lt;/type&gt;&#10;    &lt;/formElement&gt;&#10;    &lt;formElement&gt;&#10;        &lt;label&gt;Monitor?&lt;/label&gt;&#10;		&lt;property&gt;monitor&lt;/property&gt;&#10;		&lt;documentation&gt;Continuously update the property until the workflow completes.&lt;/documentation&gt;&#10;		&lt;type&gt;checkbox&lt;/type&gt;&#10;		&lt;checkedValue&gt;1&lt;/checkedValue&gt;&#10;		&lt;uncheckedValue&gt;0&lt;/uncheckedValue&gt;&#10;		&lt;initiallyChecked&gt;1&lt;/initiallyChecked&gt;&#10;		&lt;value&gt;1&lt;/value&gt;&#10;    &lt;/formElement&gt;&#10;    &lt;formElement&gt;&#10;        &lt;label&gt;Monitor Interval:&lt;/label&gt;&#10;        &lt;property&gt;interval&lt;/property&gt;&#10;        &lt;documentation&gt;The interval (in seconds) between each set of API calls when monitoring the workflow.&lt;/documentation&gt;&#10;        &lt;type&gt;entry&lt;/type&gt;&#10;        &lt;value&gt;5&lt;/value&gt;&#10;    &lt;/formElement&gt;&#10;    &lt;formElement&gt;&#10;        &lt;label&gt;Pretty?&lt;/label&gt;&#10;		&lt;property&gt;pretty&lt;/property&gt;&#10;		&lt;documentation&gt;Save the output in a "pretty" format.&lt;/documentation&gt;&#10;		&lt;type&gt;checkbox&lt;/type&gt;&#10;		&lt;checkedValue&gt;1&lt;/checkedValue&gt;&#10;		&lt;uncheckedValue&gt;0&lt;/uncheckedValue&gt;&#10;		&lt;initiallyChecked&gt;1&lt;/initiallyChecked&gt;&#10;		&lt;value&gt;1&lt;/value&gt;&#10;    &lt;/formElement&gt;&#10;&lt;editor&gt;</value>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>interval</formalParameterName>
        <defaultValue>5</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>monitor</formalParameterName>
        <defaultValue>1</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>checkbox</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>pretty</formalParameterName>
        <defaultValue>1</defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>checkbox</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>projectToGet</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>propertyForDetails</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>propertyForOutcome</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>workflowToGet</formalParameterName>
        <defaultValue></defaultValue>
        <description></description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>GetWorkflowDetails</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>use strict;&#10;use warnings;&#10;use ElectricCommander;&#10;use JSON;&#10;&#10;my $ec = new ElectricCommander;&#10;&#10;sub getParameterValue($);&#10;sub expandWorkflow($$);&#10;&#10;my $project = getParameterValue('projectToGet');&#10;my $workflow = getParameterValue('workflowToGet');&#10;my $propertyForDetails = getParameterValue('propertyForDetails');&#10;my $propertyForOutcome = getParameterValue('propertyForOutcome');&#10;my $monitor = getParameterValue('monitor');&#10;my $pretty = getParameterValue('pretty');&#10;my $interval = getParameterValue('interval');&#10;my $completed;&#10;my $lastDetails;&#10;my $lastOutcome;&#10;&#10;do {&#10;    my $json = JSON-&gt;new-&gt;allow_nonref;&#10;    my $expanded = expandWorkflow($project, $workflow);&#10;    my $details = $pretty ?&#10;        $json-&gt;pretty-&gt;canonical-&gt;encode($expanded) :&#10;        $json-&gt;canonical-&gt;encode($expanded);&#10;&#10;    # Only bother setting the details property if it's changed.&#10;    if ($details ne $lastDetails) {&#10;        $ec-&gt;setProperty($propertyForDetails, $details);&#10;        $lastDetails = $details;&#10;    }&#10;&#10;    # Only bother setting the outcome property if it's changed.&#10;    if ($lastOutcome ne $expanded-&gt;{"outcome"}) {&#10;        $ec-&gt;setProperty($propertyForOutcome, $expanded-&gt;{"outcome"});&#10;        $lastOutcome = $expanded-&gt;{"outcome"};&#10;    }&#10;&#10;    $completed = $expanded-&gt;{"completed"};&#10;&#10;    # If we're monitoring the workflow, keep sleeping for the specified interval&#10;    # until we the workflow is completed.&#10;    if ($monitor &amp;&amp; !$completed) {&#10;        sleep $interval;&#10;    }&#10;} while ($monitor &amp;&amp; !$completed);&#10;&#10;# Helper method to extract the value of a parameter.&#10;&#10;sub getParameterValue($)&#10;{&#10;    my ($name) = @_;&#10;    return $ec-&gt;getProperty("/myParent/$name")-&gt;findvalue("//value")-&gt;string_value;&#10;}&#10;&#10;# Main helper method to expand a workflow and return the JSON representing the&#10;# workflow, its states and transitions, and its subworkflows and subjobs.  Called&#10;# recursively to fetch subworkflow information.&#10;&#10;sub expandWorkflow($$)&#10;{&#10;    my ($project, $workflow) = @_;&#10;&#10;    # Fields from the "get" server responses that are safe to ignore.&#10;    my %exclude = (&#10;        "actualParameters", 1,&#10;        "combinedStatus", 1,&#10;        "createTime", 1,&#10;        "description", 1,&#10;        "lastModifiedBy", 1,&#10;        "modifyTime", 1,&#10;        "owner", 1,&#10;        "propertySheetId", 1,&#10;        "workspace", 1&#10;    );&#10;&#10;    my %workflowData;&#10;&#10;    # Save all the workflow's metadata.&#10;    my $result = $ec-&gt;getWorkflow($project, $workflow);&#10;    foreach my $workflowElement($result-&gt;findnodes("/responses/response/workflow/*")) {&#10;        my $name = $workflowElement-&gt;getName();&#10;        my $value = $workflowElement-&gt;string_value;&#10;        if (!defined($exclude{$name}) &amp;&amp; $value ne "") {&#10;            $workflowData{$name} = $value;&#10;        }&#10;    }&#10;&#10;    # Save the "outcome" of the workflow, which is actually composed using the outcomes&#10;    # of all subjobs/subworkflows.&#10;    my $outcome = "success";&#10;&#10;    # Save information for each of the workflow's states.&#10;    my @statesData = ();&#10;    my $stateIndex = 0;&#10;    $result = $ec-&gt;getStates($project, $workflow);&#10;    foreach my $state($result-&gt;findnodes("/responses/response/state")) {&#10;        my %stateData;&#10;        my $stateName = $state-&gt;findvalue("stateName")-&gt;string_value;&#10;&#10;        # Save all the state's metadata, and expand subjob/subworkflow elements&#10;        # if they exist.&#10;        foreach my $stateElement($state-&gt;findnodes("*")) {&#10;            my $name = $stateElement-&gt;getName();&#10;            my $value = $stateElement-&gt;string_value;&#10;            if (!defined($exclude{$name}) &amp;&amp; $value ne "") {&#10;                $stateData{$name} = $value;&#10;                my $subprocessOutcome = "";&#10;&#10;                if ($name eq "subworkflow") {&#10;                    # Account for different formats for the &lt;subworkflow&gt; element.  In&#10;                    # either case, call expandWorkflow recursively on the subworkflow.&#10;                    if ($value =~ m#/projects/(.*)/workflows/(.*)#) {&#10;                        $stateData{"subworkflowDetail"} = expandWorkflow($1, $2);&#10;                    } else {&#10;                        $stateData{"subworkflowDetail"} = expandWorkflow($1, $value);&#10;                    }&#10;                    $subprocessOutcome = $stateData{"subworkflowDetail"}{"outcome"};&#10;                } elsif ($name eq "subjob") {&#10;                    # Use the "getJobInfo" API call and save the job information.&#10;                    my %jobData;&#10;                    my $jobInfo = $ec-&gt;getJobInfo($value);&#10;                    foreach my $jobElement($jobInfo-&gt;findnodes("/responses/response/job/*")) {&#10;                        my $name = $jobElement-&gt;getName();&#10;                        my $value = $jobElement-&gt;string_value;&#10;                        if (!defined($exclude{$name}) &amp;&amp; $value ne "") {&#10;                            $jobData{$name} = $value;&#10;                        }&#10;                    }&#10;                    $stateData{"subjobDetail"} = \%jobData;&#10;                    $subprocessOutcome = $jobInfo-&gt;findvalue("//outcome")-&gt;string_value;&#10;                }&#10;                if ($subprocessOutcome ne "" &amp;&amp; $outcome ne "error") {&#10;                    if ($outcome eq "success" &amp;&amp; $subprocessOutcome ne "success") {&#10;                        $outcome = $subprocessOutcome;&#10;                    } elsif ($outcome eq "warning" &amp;&amp; $subprocessOutcome eq "error") {&#10;                        $outcome = $subprocessOutcome;&#10;                    }&#10;                }&#10;            }&#10;        }&#10;&#10;        # Save information for each of the state's transitions.&#10;        my @transitionsData = ();&#10;        my $transitionIndex = 0;&#10;        $result = $ec-&gt;getTransitions($project, $workflow, $stateName);&#10;        foreach my $transition($result-&gt;findnodes("/responses/response/transition")) {&#10;            my %transitionData;&#10;            my $transitionName = $transition-&gt;findvalue("transitionName")-&gt;string_value;&#10;            foreach my $transitionElement($transition-&gt;findnodes("*")) {&#10;                my $name = $transitionElement-&gt;getName();&#10;                my $value = $transitionElement-&gt;string_value;&#10;                if (!defined($exclude{$name}) &amp;&amp; $value ne "") {&#10;                    $transitionData{$name} = $value;&#10;                }&#10;            }&#10;            $transitionsData[$transitionIndex] = \%transitionData;&#10;            $transitionIndex++;&#10;        }&#10;        $stateData{'transition'} = \@transitionsData;&#10;        $statesData[$stateIndex] = \%stateData;&#10;        $stateIndex++;&#10;    }&#10;    $workflowData{'outcome'} = $outcome;&#10;    $workflowData{'state'} = \@statesData;&#10;&#10;    # Check the last log entry to see if the workflow was automatically or manually&#10;    # completed and save it.  If manual, also save the user who completed it.&#10;    if ($workflowData{'completed'}) {&#10;        my $workflowId = $workflowData{'workflowId'};&#10;        my $result = $ec-&gt;findObjects('logEntry', {&#10;            filter =&gt;&#10;            [&#10;                {&#10;                    propertyName =&gt; "severity",&#10;                    operator =&gt; "equals",&#10;                    operand1 =&gt; "INFO"&#10;                },&#10;                {&#10;                    propertyName =&gt; "message",&#10;                    operator =&gt; "contains",&#10;                    operand1 =&gt; "has completed the workflow"&#10;                },&#10;                {&#10;                    operator =&gt; "equals",&#10;                    propertyName =&gt; "container",&#10;                    operand1 =&gt; "workflow-$workflowId"&#10;                }&#10;            ],&#10;            maxIds =&gt; 1,&#10;            numObjects =&gt; 1&#10;        });&#10;        if (scalar($result-&gt;findnodes("//logEntry"))) {&#10;            $workflowData{'completedAutomatically'} = 0;&#10;            my $message = $result-&gt;findvalue("//message")-&gt;string_value;&#10;            $message =~ m/User \'(.*)\' has completed the workflow/;&#10;            $workflowData{'completedByUser'} = $1;&#10;        } else {&#10;            $workflowData{'completedAutomatically'} = 1;&#10;        }&#10;    }&#10;&#10;    return \%workflowData;&#10;}&#10;</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
  </project>
</exportedData>
