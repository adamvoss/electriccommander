<?xml version="1.0" encoding="UTF-8"?>
<exportedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="commander.xsd" version="55" buildLabel="build_4.1_57497_2013.02.14_03:57:48" buildVersion="4.1.4.57497" passkey="47d489ce7c9d9aecd3615e30b35a791e8563037d">
  <exportPath>/projects/108744/procedures/deleteObjects</exportPath>
  <procedure>
    <procedureName>deleteObjects</procedureName>
    <description></description>
    <jobNameTemplate>delete-jobs-$[jobId]</jobNameTemplate>
    <resourceName></resourceName>
    <workspaceName></workspaceName>
    <propertySheet>
      <property>
        <propertyName>ec_customEditorData</propertyName>
        <propertySheet>
          <property>
            <propertyName>parameters</propertyName>
            <propertySheet>
              <property>
                <propertyName>objectType</propertyName>
                <propertySheet>
                  <property>
                    <propertyName>options</propertyName>
                    <propertySheet>
                      <property>
                        <propertyName>list</propertyName>
                        <expandable>1</expandable>
                        <value>job|workflow</value>
                      </property>
                      <property>
                        <propertyName>type</propertyName>
                        <expandable>1</expandable>
                        <value>simpleList</value>
                      </property>
                    </propertySheet>
                  </property>
                  <property>
                    <propertyName>formType</propertyName>
                    <expandable>1</expandable>
                    <value>standard</value>
                  </property>
                </propertySheet>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </property>
    </propertySheet>
    <formalParameter>
      <formalParameterName>chunkSize</formalParameterName>
      <defaultValue>20</defaultValue>
      <description>Iterate over chunks this size until maxObjects.</description>
      <expansionDeferred>0</expansionDeferred>
      <required>0</required>
      <type>entry</type>
    </formalParameter>
    <formalParameter>
      <formalParameterName>daysLimit</formalParameterName>
      <defaultValue>14</defaultValue>
      <description>Delete jobs at least this many days old.</description>
      <expansionDeferred>0</expansionDeferred>
      <required>0</required>
      <type>entry</type>
    </formalParameter>
    <formalParameter>
      <formalParameterName>maxObjects</formalParameterName>
      <defaultValue>200</defaultValue>
      <description>Delete up to this many objects.</description>
      <expansionDeferred>0</expansionDeferred>
      <required>0</required>
      <type>entry</type>
    </formalParameter>
    <formalParameter>
      <formalParameterName>objectType</formalParameterName>
      <defaultValue>job</defaultValue>
      <description>The type of object (job|workflow|etc).</description>
      <expansionDeferred>0</expansionDeferred>
      <required>0</required>
      <type>select</type>
    </formalParameter>
    <step>
      <stepName>Delete</stepName>
      <alwaysRun>0</alwaysRun>
      <broadcast>0</broadcast>
      <command>use strict;&#10;use warnings;&#10;use ElectricCommander;&#10;use DateTime;&#10;use POSIX;&#10;&#10;$| = 1;&#10;&#10;my $olderThan = DateTime-&gt;now()-&gt;subtract(days =&gt; "$[daysLimit]")-&gt;iso8601() . ".000Z";&#10;my $interval = floor($[chunkSize] / 20);&#10;# Maximum 60 seconds interval between checks no matter how large the chunk size is.&#10;if ($interval &gt; 60) {&#10;    $interval = 60;&#10;}&#10;&#10;if ($[maxObjects] &lt; $[chunkSize]) {&#10;    print STDERR "Error: maxObjects must be at least as large as chunkSize";&#10;    exit 1;&#10;}&#10;&#10;print "Chunk size: $[chunkSize]\nDays limit: $[daysLimit]\n"&#10;    . "Max objects: $[maxObjects]\nObject type: $[objectType]\n"&#10;    . "Poll interval: $interval" . "s\n\n";&#10;&#10;my $ec = new ElectricCommander({debug =&gt; 1});&#10;$ec-&gt;login("admin", $ec-&gt;getFullCredential("admin", {value =&gt; "password"})-&gt;find("//password"));&#10;&#10;my $numReturned;&#10;my $numDeleted = 0;&#10;my $numChunks = 0;&#10;my $overallStart = time();&#10;my %deletedObjects = ();&#10;do {&#10;    $numChunks ++;&#10;    my $maxIds = $[chunkSize] &gt; ($[maxObjects] - $numDeleted) ? $[maxObjects] - $numDeleted : $[chunkSize];&#10;    my $result = $ec-&gt;deleteObjects("$[objectType]", {&#10;        maxIds     =&gt; $maxIds,&#10;        filter     =&gt; [{&#10;            propertyName =&gt; "finish",&#10;            operator     =&gt; "lessThan",&#10;            operand1     =&gt; $olderThan&#10;        }],&#10;        sort =&gt; [{&#10;            propertyName =&gt; "jobId",&#10;            order =&gt; "ascending"&#10;        }],&#10;    });&#10;&#10;    $numReturned = $result-&gt;findnodes("/responses/response/objectId")-&gt;size();&#10;    $numDeleted += $numReturned;&#10;    my @objectList;&#10;    foreach my $objectIdNode ($result-&gt;findnodes("/responses/response/objectId")) {&#10;        my $objectId = $objectIdNode-&gt;string_value;&#10;        if (exists($deletedObjects{$objectId})) {&#10;            my $error = "Error: $objectId is being deleted again";&#10;            $ec-&gt;setProperty("summary", $error);&#10;            print STDERR $error;&#10;            exit 1;&#10;        }&#10;        $deletedObjects{$objectId} = 1;&#10;        push (@objectList, $objectId);&#10;    }&#10;&#10;    if ($numReturned &gt; 0) {&#10;        print "Waiting for $numReturned $[objectType]s to be deleted...\n";&#10;        my $getObjectsResult;&#10;        do {&#10;            sleep $interval;&#10;            $getObjectsResult = $ec-&gt;getObjects({objectId =&gt; \@objectList});&#10;        } while ($getObjectsResult-&gt;findnodes("/responses/response/object")-&gt;size() &gt; 0);&#10;        my $overallTime = time() - $overallStart;&#10;        my $percent = ceil(($numDeleted / $[maxObjects]) * 100);&#10;        my $summary = "Deleted $numDeleted $[objectType]s ($percent%) | "&#10;            . sprintf("Total average deletion time: %.2fs", $overallTime / $numDeleted);&#10;        $ec-&gt;setProperty("summary", $summary);&#10;        print "$summary\n";&#10;    }&#10;} while ($numReturned &gt; 0 &amp;&amp; $[maxObjects] - $numDeleted &gt; 0);&#10;&#10;if ($numDeleted == 0) {&#10;    $ec-&gt;setProperty("summary", "No $[objectType]s to delete");&#10;}</command>
      <condition></condition>
      <description></description>
      <errorHandling>failProcedure</errorHandling>
      <exclusiveMode>none</exclusiveMode>
      <logFileName></logFileName>
      <parallel>0</parallel>
      <postProcessor>postp</postProcessor>
      <releaseMode>none</releaseMode>
      <resourceName></resourceName>
      <shell>ec-perl</shell>
      <timeLimit></timeLimit>
      <timeLimitUnits>minutes</timeLimitUnits>
      <workingDirectory></workingDirectory>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>formType</propertyName>
              <expandable>1</expandable>
              <value>command</value>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <attachedCredentials>
        <credentialName>admin</credentialName>
      </attachedCredentials>
    </step>
  </procedure>
</exportedData>
